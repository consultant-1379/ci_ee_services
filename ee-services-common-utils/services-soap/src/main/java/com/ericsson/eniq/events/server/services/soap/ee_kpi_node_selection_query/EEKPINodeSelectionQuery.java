package com.ericsson.eniq.events.server.services.soap.ee_kpi_node_selection_query;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 */
@WebServiceClient(name = "EE_KPI_Node_Selection_Query", targetNamespace = "EE_KPI_Node_Selection_Query", wsdlLocation = "http://atdl785esxvm21.athtem.eei.ericsson.se:8080/dswsbobje/qaawsservices/biws?WSDL=1&cuid=AbTxRYU8IYRLj8RYWyZnAK8")
public class EEKPINodeSelectionQuery
        extends Service {

    private final static URL EEKPINODESELECTIONQUERY_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.ericsson.eniq.events.server.services.soap.ee_kpi_node_selection_query.EEKPINodeSelectionQuery.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.ericsson.eniq.events.server.services.soap.ee_kpi_node_selection_query.EEKPINodeSelectionQuery.class.getResource(".");
            url = new URL(baseUrl, "http://atdl785esxvm21.athtem.eei.ericsson.se:8080/dswsbobje/qaawsservices/biws?WSDL=1&cuid=AbTxRYU8IYRLj8RYWyZnAK8");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://atdl785esxvm21.athtem.eei.ericsson.se:8080/dswsbobje/qaawsservices/biws?WSDL=1&cuid=AbTxRYU8IYRLj8RYWyZnAK8', retrying as a local file");
            logger.warning(e.getMessage());
        }
        EEKPINODESELECTIONQUERY_WSDL_LOCATION = url;
    }

    public EEKPINodeSelectionQuery(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EEKPINodeSelectionQuery() {
        super(EEKPINODESELECTIONQUERY_WSDL_LOCATION, new QName("EE_KPI_Node_Selection_Query", "EE_KPI_Node_Selection_Query"));
    }

    /**
     * @return returns QueryAsAServiceSoap
     */
    @WebEndpoint(name = "QueryAsAServiceSoap")
    public QueryAsAServiceSoap getQueryAsAServiceSoap() {
        return super.getPort(new QName("EE_KPI_Node_Selection_Query", "QueryAsAServiceSoap"), QueryAsAServiceSoap.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns QueryAsAServiceSoap
     */
    @WebEndpoint(name = "QueryAsAServiceSoap")
    public QueryAsAServiceSoap getQueryAsAServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("EE_KPI_Node_Selection_Query", "QueryAsAServiceSoap"), QueryAsAServiceSoap.class, features);
    }

}
