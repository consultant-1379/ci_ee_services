##
## WCDMA Call Failure Analysis Access Area Event Summary
##
## Velocity Parameter: 
##		HIER3_CELL_ID:  Cell Hash Id
##
## Named PreparedStatement Parameter:
##
##     dateFrom:   starting time
##     dateTo:     ending time
##

#set($whereClause = "AND HIER3_CELL_ID = :HIER3_CELL_ID AND EVENT_ID = :eventID")
#set($useExclusiveTACs="no")
#set($distinct ="")


#if($categoryId == "0")
#set($columnsToIncludeInNewView = ["HIER3_CELL_ID", "EVENT_ID", "IMSI","CS_RAB_FAIL_CNT","CS_ERR_CNT"])
#elseif($categoryId == "1")
	#set($columnsToIncludeInNewView = ["HIER3_CELL_ID", "EVENT_ID", "IMSI","PS_RAB_FAIL_CNT","PS_ERR_CNT"])
#elseif($categoryId == "2")
	#set($columnsToIncludeInNewView = ["HIER3_CELL_ID", "EVENT_ID", "IMSI","MULTI_RAB_FAIL_CNT","MULTI_ERR_CNT"])
#elseif($categoryId == "3")
	#set($columnsToIncludeInNewView = ["HIER3_CELL_ID", "EVENT_ID", "IMSI","CS_RAB_FAIL_CNT","PS_RAB_FAIL_CNT","MULTI_RAB_FAIL_CNT","CS_ERR_CNT","PS_ERR_CNT","MULTI_ERR_CNT"])
###Hide total failure at the moment until UI puts back
##elseif($categoryId == "4")
	##set($columnsToIncludeInNewView = ["HIER3_CELL_ID", "EVENT_ID", "IMSI"])
###
#end

BEGIN
SELECT 
	topology.VENDOR AS RAN_VENDOR, 
	topology.HIERARCHY_3 AS CONTROLLER, 
	topology.CELL_ID AS ACCESS_AREA,
	EVENT_ID_ALTERNATE_DESC As FAILURE_TYPE, 
	data.NO_OF_ERRORS, 
	data.IMPACTED_SUBSCRIBERS,
	data.HIER3_CELL_ID,
	data.EVENT_ID,
	(CASE 
		WHEN data.EVENT_ID = 438
		THEN cast( ROUND((RAB_CNT * 100.00) / allcalls.NUM_CALLS_SUC,2) as numeric(36,2))
		WHEN data.EVENT_ID = 456
		THEN cast( ROUND((RAB_CNT * 100.00) / allcalls.NUM_CALLS_ATTEMPT,2) as numeric(36,2))
	END) AS 'RAB Failure Ratio (%)',
	##DRILL_CAT and CATEGORY_ID value is got from UI and return to UI since it needs for drilling.
	:categoryId AS CATEGORY_ID,
	'$drillCat' AS DRILL_CAT
	##
FROM
   (
    SELECT
        SUM(CALLS_PS_ALL + CALLS_CS_ALL + CALLS_MR_ALL) as NUM_CALLS_ATTEMPT,
		SUM(PS_SUC+CS_SUC+MR_SUC) as NUM_CALLS_SUC,
        HIER3_CELL_ID
    FROM
       	EVENT_E_RAN_CFA_HIER3_CELL_ID_ALLCALLS_15MIN
    WHERE
		HIER3_CELL_ID = :HIER3_CELL_ID
    AND DATETIME_ID >= :dateFrom
    AND DATETIME_ID < :dateTo
    GROUP BY
        HIER3_CELL_ID
	) AS allcalls
	
	RIGHT OUTER JOIN

(	
	select 
		    #if($categoryId == "0")
				SUM(CS_ERR_CNT) AS NO_OF_ERRORS,
				SUM(CS_RAB_FAIL_CNT) AS RAB_CNT,
			#elseif($categoryId == "1")
				SUM(PS_ERR_CNT) AS NO_OF_ERRORS,
				SUM(PS_RAB_FAIL_CNT) AS RAB_CNT,
			#elseif($categoryId == "2")
				SUM(MULTI_ERR_CNT) AS NO_OF_ERRORS,
				SUM(MULTI_RAB_FAIL_CNT) AS RAB_CNT,
			#elseif($categoryId == "3")
				COUNT(*) AS NO_OF_ERRORS,
				SUM(CS_RAB_FAIL_CNT+PS_RAB_FAIL_CNT+MULTI_RAB_FAIL_CNT) AS RAB_CNT,
			###Hide total failure at the moment until UI puts back
			##elseif($categoryId == "4")
				##count (*) as failures,
			###
			#end
		HIER3_CELL_ID,
		EVENT_ID,
		count (distinct rawview.IMSI) AS IMPACTED_SUBSCRIBERS
	from 
		#REPLACE_RAW_VIEW_WITH_RAW_TABLES_TAC_EXCLUSION_SPECIFY_COLUMNS_CONDITIONED($TECH_PACK_LIST.getAllRawErrTables() "rawview" $columnsToIncludeInNewView $whereClause $useExclusiveTACs $distinct)
	WHERE
			#if($categoryId == "0")
				CS_RAB_FAIL_CNT > 0
			#elseif($categoryId == "1")
				PS_RAB_FAIL_CNT > 0 
			#elseif($categoryId == "2")
			    MULTI_RAB_FAIL_CNT > 0 
			#elseif($categoryId == "3")
				(CS_RAB_FAIL_CNT > 0 OR PS_RAB_FAIL_CNT > 0 OR MULTI_RAB_FAIL_CNT > 0)
			#end
	group by
		HIER3_CELL_ID,
		EVENT_ID
) 
as data

   ON
    (
        allcalls.HIER3_CELL_ID = data.HIER3_CELL_ID
    )

left outer join
(
	select distinct VENDOR, HIERARCHY_3, HIERARCHY_1, HIER3_CELL_ID, CELL_ID from DIM_E_SGEH_HIER321_CELL
	where RAT=1
) 
as topology(VENDOR, HIERARCHY_3, HIERARCHY_1, HIER3_CELL_ID, CELL_ID) 
on 
(
	topology.HIER3_CELL_ID=data.HIER3_CELL_ID
) 
inner join DIM_E_RAN_CFA_EVENTTYPE EVENT_ID_ALTERNATE_DESC 
on (
	data.EVENT_ID = EVENT_ID_ALTERNATE_DESC.EVENT_ID
)
END