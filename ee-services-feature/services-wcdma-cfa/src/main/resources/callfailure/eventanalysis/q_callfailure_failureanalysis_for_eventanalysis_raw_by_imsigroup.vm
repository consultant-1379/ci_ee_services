##
## WCDMA Call Failure Event Analysis by IMSI Group (using raw tables)
##
##
## Named PreparedStatement Parameter:
##
##     :groupname	The customer IMSIGroup
##     :eventID		The event id we are drilling on
##     :TECH_PACK_LIST		tables that should be used in query, see TechPackList javadoc
##	   :count 	   max number of rows
##     :dateFrom   starting time
##     :dateTo     ending time
##

#set($columnsToSelect=["TRIGGER_POINT","RRC_ESTABLISHMENT_CAUSE","RAN_DISCONNECTION_CODE","RAN_DISCONNECTION_SUBCODE","EVENT_ID", "IMSI", "EVENT_TIME", "TAC", "PROCEDURE_INDICATOR", "EVALUATION_CASE", "EXCEPTION_CLASS", "CAUSE_VALUE", "EXTENDED_CAUSE_VALUE", "SEVERITY_INDICATOR", "HIER3_CELL_ID", "SOURCE_CONF","CPICH_EC_NO_CELL_1","UL_INT_CELL1","RSCP_CELL_1","TARGET_CONF","C_ID_SERV_HSDSCH_CELL","CRNC_ID_SERV_HSDSCH_CELL","RSCP_CELL_2","RSCP_CELL_3","RSCP_CELL_4","CPICH_EC_NO_CELL_2","CPICH_EC_NO_CELL_3","CPICH_EC_NO_CELL_4","UL_INT_CELL2","UL_INT_CELL3","UL_INT_CELL4","SCRAMBLING_CODE_CELL_1","SCRAMBLING_CODE_CELL_2","SCRAMBLING_CODE_CELL_3","SCRAMBLING_CODE_CELL_4","GBR_UL","GBR_DL","UTRAN_RANAP_CAUSE","DATA_IN_DL_RLC_BUFFERS","HIER3_ID"])
BEGIN
SELECT

	#if($count > 0)
	  top $count
	#end

	#if($csv == true)
   	 DATEADD(minute,$tzOffset,rawview.EVENT_TIME)AS 'Event Time',
   	#else
   	rawview.EVENT_TIME AS 'Event Time',
   	#end
	rawview.IMSI AS 'IMSI',
	rawView.TAC AS 'TAC',
	DIM_E_SGEH_TAC.MANUFACTURER AS 'Terminal Make',
	DIM_E_SGEH_TAC.MARKETING_NAME AS 'Terminal Model',
	DIM_E_RAN_CFA_EVENTTYPE.EVENT_ID_ALTERNATE_DESC AS 'Event Type',
	DIM_E_RAN_CFA_PROCEDURE_INDICATOR.PROCEDURE_INDICATOR_DESC AS 'Procedure Indicator',
	DIM_E_RAN_CFA_EVALUATION_CASE.EVALUATION_CASE_DESC AS 'Evaluation Case',
	DIM_E_RAN_CFA_EXCEPTION_CLASS.EXCEPTION_CLASS_DESC AS 'Exception Class',
	DIM_E_RAN_CFA_CAUSE_VALUE.CAUSE_VALUE_DESC AS 'Cause Value',
	DIM_E_RAN_CFA_EXTENDED_CAUSE_VALUE.EXTENDED_CAUSE_VALUE_DESC AS 'Extended Cause Value',
	DIM_E_RAN_CFA_SEVERITY_INDICATOR.SEVERITY_INDICATOR_DESC AS 'Severity Indicator',
	rawData.HIERARCHY_3 AS 'Controller',
	rawData.CELL_ID AS 'Access Area',
	source.RABTYPE_DESC,
	ecno_1.ECNO_DBM,
	ulint_1.ULINT_DBM,
	rscp_1.RSCP_DBM,
	target.RABTYPE_DESC,
	targetData.HIERARCHY_3,
	targetData.CELL_ID,
	rscp_2.RSCP_DBM,
	rscp_3.RSCP_DBM,
	rscp_4.RSCP_DBM,
	ecno_2.ECNO_DBM,
	ecno_3.ECNO_DBM,
	ecno_4.ECNO_DBM,
	ulint_2.ULINT_DBM,
	ulint_3.ULINT_DBM,
	ulint_4.ULINT_DBM,
	rawview.SCRAMBLING_CODE_CELL_1,
	rawview.SCRAMBLING_CODE_CELL_2,
	rawview.SCRAMBLING_CODE_CELL_3,
	rawview.SCRAMBLING_CODE_CELL_4,
	rawview.GBR_UL,
	rawview.GBR_DL,
	ranap_cause.UTRAN_RANAP_CAUSE_DESC,
	rawview.DATA_IN_DL_RLC_BUFFERS,
	
	rawview.RAN_DISCONNECTION_CODE AS DISCONNECTION_CODE,
	rawview.RAN_DISCONNECTION_SUBCODE AS DISCONNECTION_SUBCODE,
	disconRef.DISCONNECTION_DESC AS DISCONNECTION_DESC,
	triggerPoint.TRIGGER_POINT_DESC AS TRIGGER_POINT,
	rrcEstCause.RRC_ESTABLISHMENT_CAUSE_DESC as RRC_ESTABLISHMENT_CAUSE

FROM

	#REPLACE_RAW_VIEW_WITH_RAW_TABLES_FILTER_ON_TIME_AND_SPECIFY_COLUMNS_WITH_TAC_EXCLUSION($TECH_PACK_LIST.getAllRawErrTables() "rawview" $columnsToSelect)
	,DIM_E_SGEH_HIER321_CELL rawData,
	DIM_E_SGEH_HIER321_CELL targetData,
	DIM_E_SGEH_TAC,DIM_E_RAN_CFA_PROCEDURE_INDICATOR,
	DIM_E_RAN_CFA_EVALUATION_CASE,
	DIM_E_RAN_CFA_EXCEPTION_CLASS,
	DIM_E_RAN_CFA_CAUSE_VALUE,
	DIM_E_RAN_CFA_EXTENDED_CAUSE_VALUE,
	DIM_E_RAN_CFA_EVENTTYPE,
	DIM_E_RAN_CFA_SEVERITY_INDICATOR,
    DIM_E_RAN_RABTYPE source,
    DIM_E_RAN_RABTYPE target,
    DIM_E_RAN_CFA_UTRAN_RANAP_CAUSE ranap_cause,
    DIM_E_RAN_ECNO_MAPPING ecno_1,
    DIM_E_RAN_ECNO_MAPPING ecno_2,
    DIM_E_RAN_ECNO_MAPPING ecno_3,
    DIM_E_RAN_ECNO_MAPPING ecno_4,
    DIM_E_RAN_RSCP_MAPPING rscp_1,
    DIM_E_RAN_RSCP_MAPPING rscp_2,
    DIM_E_RAN_RSCP_MAPPING rscp_3,
    DIM_E_RAN_RSCP_MAPPING rscp_4,
    DIM_E_RAN_ULINT_MAPPING ulint_1,
    DIM_E_RAN_ULINT_MAPPING ulint_2,
    DIM_E_RAN_ULINT_MAPPING ulint_3,
    DIM_E_RAN_ULINT_MAPPING ulint_4,
	DIM_E_RAN_CFA_DISCONNECTION disconRef,
	DIM_E_RAN_CFA_RRC_ESTABLISHMENT_CAUSE rrcEstCause,
	DIM_E_RAN_CFA_TRIGGER_POINT triggerPoint

WHERE

	rawView.TAC *= DIM_E_SGEH_TAC.TAC AND
	rawView.EVENT_ID = :eventID AND
	rawView.EVENT_ID = DIM_E_RAN_CFA_EVENTTYPE.EVENT_ID AND
	rawView.IMSI IN (
		SELECT
			GROUP_TYPE_E_IMSI.IMSI
		FROM
			GROUP_TYPE_E_IMSI WHERE GROUP_TYPE_E_IMSI.GROUP_NAME = :groupname
	) AND
	rawView.PROCEDURE_INDICATOR *= DIM_E_RAN_CFA_PROCEDURE_INDICATOR.PROCEDURE_INDICATOR AND
	rawView.EVALUATION_CASE *= DIM_E_RAN_CFA_EVALUATION_CASE.EVALUATION_CASE AND
	rawView.EXCEPTION_CLASS *= DIM_E_RAN_CFA_EXCEPTION_CLASS.EXCEPTION_CLASS AND
	rawView.CAUSE_VALUE *= DIM_E_RAN_CFA_CAUSE_VALUE.CAUSE_VALUE AND
	rawView.EXTENDED_CAUSE_VALUE *= DIM_E_RAN_CFA_EXTENDED_CAUSE_VALUE.EXTENDED_CAUSE_VALUE AND
	rawView.SEVERITY_INDICATOR *= DIM_E_RAN_CFA_SEVERITY_INDICATOR.SEVERITY_INDICATOR_ID AND
	rawview.HIER3_CELL_ID *= rawData.HIER3_CELL_ID
	and rawview.source_conf *= source.rabtype
	and rawview.target_conf *= target.rabtype
	and rawview.UTRAN_RANAP_CAUSE *= ranap_cause.UTRAN_RANAP_CAUSE
	and rawview.RSCP_CELL_1 *= rscp_1.RSCP
	and rawview.RSCP_CELL_2 *= rscp_2.RSCP
	and rawview.RSCP_CELL_3 *= rscp_3.RSCP
	and rawview.RSCP_CELL_4 *= rscp_4.RSCP
	and rawview.UL_INT_CELL1 *= ulint_1.ULINT
	and rawview.UL_INT_CELL2 *= ulint_2.ULINT
	and rawview.UL_INT_CELL3 *= ulint_3.ULINT
	and rawview.UL_INT_CELL4 *= ulint_4.ULINT
	and rawview.CPICH_EC_NO_CELL_1 *= ecno_1.ECNO
	and rawview.CPICH_EC_NO_CELL_2 *= ecno_2.ECNO
	and rawview.CPICH_EC_NO_CELL_3 *= ecno_3.ECNO
	and rawview.CPICH_EC_NO_CELL_4 *= ecno_4.ECNO
	AND rawview.C_ID_SERV_HSDSCH_CELL *= targetData.CID
	and rawview.HIER3_ID *= targetData.HIER3_ID
	AND rawview.RAN_DISCONNECTION_CODE *= disconRef.DISCONNECTION_CODE
	AND rawview.RAN_DISCONNECTION_SUBCODE *= disconRef.DISCONNECTION_SUB_CODE	
	AND rawview.TRIGGER_POINT *= triggerPoint.TRIGGER_POINT
	AND rawview.RRC_ESTABLISHMENT_CAUSE *= rrcEstCause.RRC_ESTABLISHMENT_CAUSE
END