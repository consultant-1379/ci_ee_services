##
## LTE Call Failure Analysis enodeB group Cause Code Analysis (using aggregation tables)
##
## Velocity Parameter:
##	
##		$aggregationView the aggregation view to query against	
##
##
## Named PreparedStatement Parameter:
##
##     :dateFrom   starting time
##     :dateTo     ending time#

#set($columnsToSelect=["EVENT_ID", "IMSI", "CAUSE_CODE"])
#set($notNullColumns=["CAUSE_CODE"])
#set($groupTable="dc.GROUP_TYPE_E_RAT_VEND_HIER3")
#set($groupnameColumn="GROUP_NAME")
#set($joinKeys=["HIER3_ID"])

SELECT
	'${groupname}' as 'Group Name',
	aggView.EVENT_ID AS 'Event ID', 
	eventDesc.EVENT_ID_DESC as 'Event Type',
	aggView.CAUSE_CODE as 'Cause Code',
	cc.CAUSE_CODE_DESC as 'Cause Code Description',
	FAILURES as 'Failures', 
	subscribers.IMPACTED_SUBSCRIBERS as 'Impacted Subscribers'
FROM 	
	(select 
		EVENT_ID,
		CAUSE_CODE,
		sum(NO_OF_ERRORS)
	from 
		$aggregationView as tempAgg
		,dc.GROUP_TYPE_E_RAT_VEND_HIER3 enodeBGroup
	where	
		enodeBGroup.GROUP_NAME = :groupname and
		enodeBGroup.HIER3_ID = tempAgg.HIER3_ID	and
		#GET_DATETIME_RANGE()
	group by
		EVENT_ID,
		CAUSE_CODE
	) as aggView(EVENT_ID, CAUSE_CODE, Failures)	
	left outer join
	(
		select 
			count(distinct rawview.IMSI),
			CAUSE_CODE,
			EVENT_ID
		from
			#REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_AND_NOT_NULL_COLUMNS_GROUPS($TECH_PACK_LIST.getAllRawTables() "rawview" $columnsToSelect $notNullColumns)
		group by
			EVENT_ID,
			CAUSE_CODE
		) as subscribers(IMPACTED_SUBSCRIBERS,CAUSE_CODE, EVENT_ID)
	on (		
		aggView.EVENT_ID = subscribers.EVENT_ID
		and
		aggView.CAUSE_CODE = subscribers.CAUSE_CODE
		)
	inner join
		dc.DIM_E_LTE_CFA_EVENTTYPE eventDesc
		on(
			eventDesc.EVENT_ID = isnull(aggView.EVENT_ID,subscribers.EVENT_ID)
		)
	left outer join
		dc.DIM_E_LTE_CFA_CAUSE_CODE cc
	on(
		cc.EVENT_ID = isnull(aggView.EVENT_ID,subscribers.EVENT_ID) and
		cc.CAUSE_CODE = isnull(aggView.CAUSE_CODE,subscribers.CAUSE_CODE)
	)
order by
aggView.EVENT_ID,
aggView.CAUSE_CODE