##
## LTE Call Failure Analysis enodeB Group category based Event Analysis (using aggregation tables)
##
## Velocity Parameter:
##	
##		$aggregationView the aggregation view to query against	
##
##
## Named PreparedStatement Parameter:
##
##     :dateFrom   starting time
##     :dateTo     ending time#


#set($columnsToSelect=["HIER3_ID", "CATEGORY_ID", "IMSI"])
#set($groupTable="dc.GROUP_TYPE_E_RAT_VEND_HIER3")
#set($groupnameColumn="GROUP_NAME")
#set($joinKeys=["HIER3_ID"])

SELECT
	'${groupname}' as 'Group Name',
	aggView.CATEGORY_ID AS 'Category ID',
	eventDesc.CATEGORY_ID_DESC as 'Category Type',
	Failures as 'Failures', 
	subscribers.IMPACTED_SUBSCRIBERS as 'Impacted Subscribers'
FROM 	
	(select 
		CATEGORY_ID,
		sum(NO_OF_ERRORS)
	from 
		$aggregationView as tempAgg
		,dc.GROUP_TYPE_E_RAT_VEND_HIER3 enodeBGroup
	where 
		enodeBGroup.GROUP_NAME = :groupname and
		enodeBGroup.HIER3_ID = tempAgg.HIER3_ID	and
		#GET_DATETIME_RANGE()
	group by
		CATEGORY_ID
	) as aggView(CATEGORY_ID, Failures)	
	left outer join
	(
		select 
			count(distinct rawview.IMSI),
			CATEGORY_ID
		from
			#REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_FILTER_COLUMNS_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_GROUPS($TECH_PACK_LIST.getAllRawTables() "rawview" $columnsToSelect)
		group by
			CATEGORY_ID
		) as subscribers(IMPACTED_SUBSCRIBERS, CATEGORY_ID)
	on (		
		aggView.CATEGORY_ID = subscribers.CATEGORY_ID
		)
	inner join
	(
		 select 
			CATEGORY_ID,
			CATEGORY_ID_DESC
		from 
			dc.DIM_E_LTE_CFA_EVENTTYPE
		group by
			CATEGORY_ID,
			CATEGORY_ID_DESC
	 )	as eventDesc
	 on(
			eventDesc.CATEGORY_ID = isnull(aggView.CATEGORY_ID,subscribers.CATEGORY_ID)
		)
order by aggView.CATEGORY_ID DESC