
#macro(LTE_CFA_TRACKING_AREA_CC_ANALYSIS_QUERY $errTable)
    select	
    	errRef.CAUSE_CODE as CAUSE_CODE,
    	count(*),
    	IMSI,
		errRef.EVENT_ID as EVENT_ID
    from
		dc.${errTable} errRef
	where
		TRAC = :TRAC
		and #GET_DATETIME_RANGE()
		and #GET_TAC_EXCLUSION()
		and CAUSE_CODE is not null
		and #GET_LTE_CFA_CAUSE_CODE_PIE_CHART_CAUSE_CODE_WHERE_LIST ("errRef" $causeCodeData)
    group by
    	IMSI,
    	CAUSE_CODE,
		EVENT_ID
#end

select
	events.CAUSE_CODE as CAUSE_CODE,
	ccref.CAUSE_CODE_DESC_PIE as 'Cause Code Description',
	events.NO_OF_ERRORS,
	events.TOTAL_NO_OF_SUBSCRIBERS,
	events.EVENT_ID as EVENT_ID,
	eventDesc.EVENT_ID_DESC as EVENT_ID_DESC,
	:NODE as NODE,
	NULL AS 'Group Name'
from
	(
		select
			err.CAUSE_CODE as CAUSE_CODE,
			sum(isnull(err.NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
			count(distinct(IMSI)) as TOTAL_NO_OF_SUBSCRIBERS,
			err.EVENT_ID as EVENT_ID
		from 
			(
				#foreach ($errtable in $TECH_PACK_LIST.getAllRawTables())
					#LTE_CFA_TRACKING_AREA_CC_ANALYSIS_QUERY($errtable)
					#if($velocityCount < $TECH_PACK_LIST.getAllRawTables().size())
							union all
					#end
				#end
			) as err (CAUSE_CODE, NO_OF_ERRORS, IMSI, EVENT_ID)	
		group by
			err.CAUSE_CODE,
			err.EVENT_ID
	) as events
inner join
	dc.DIM_E_LTE_CFA_CAUSE_CODE ccref
on
	(ccref.EVENT_ID = events.EVENT_ID
	and ccref.CAUSE_CODE = events.CAUSE_CODE )
inner join
	dc.DIM_E_LTE_CFA_EVENTTYPE eventDesc
on
	(eventDesc.EVENT_ID = events.EVENT_ID )
order by
	events.CAUSE_CODE