##=============================================================================
##
## Network Analysis : group failure analysis that goes to the aggregation tables
##
## Description: 
##
##    Failure analysis for nominated group
##
## Parameter:
##
## type : one of { APN, TAC, IMSI}
##
## timerange : one of { TR_1, TR_2, TR_3, TR_4}
##
##     TR_1 : normally query against raw events
##     TR_2 : normally query against 1min agg
##     TR_3 : normally query against 15min agg
##     TR_4 : normally query against daily agg
##
## Named PreparedStatement Parameter:
##
##    :dateFrom   starting time
##    :dateTo     ending time
##    :GROUP_NAME nominated group name
##
##=============================================================================

#macro(SELECT_FROM_AGGREGATION_AND_GROUP_TABLES $tableName)
	select
        $groupnameColumn,
        EVENT_ID,
		#if($tableName.contains("ERR"))		
			sum(NO_OF_ERRORS),
		#else
			sum(NO_OF_SUCCESSES),
		#end		
        sum(NO_OF_NET_INIT_DEACTIVATES)
    from
        $tableName temp,
        $groupTable temp_group
    where
        #GET_DATETIME_RANGE()
        and #GET_JOIN("temp" "temp_group" $joinKeys)
        and temp_group.${groupnameColumn} = :$ApplicationConstants.GROUP_NAME_PARAM
    group by
        $groupnameColumn,
        EVENT_ID
	having
		EVENT_ID between 0 and 255    ##EVENT_ID is a tinyint in database	
#end

#DEFINE_CONSTANTS()
#SET_GROUP_TYPE($type)

#if(${type}==$ApplicationConstants.TYPE_APN)
#set($columnsToSelect=["APN","EVENT_ID","IMSI"])
#elseif (${type}==$ApplicationConstants.TYPE_TAC)
#set($columnsToSelect=["TAC","EVENT_ID","IMSI","DEACTIVATION_TRIGGER"])
#elseif (${type}==$ApplicationConstants.TYPE_IMSI)
#set($columnsToSelect=["EVENT_ID","IMSI","DEACTIVATION_TRIGGER","RAT"])
#elseif (${type}==$TYPE_BSC||${type}==$TYPE_RNC)
#set($columnsToSelect=[$RAT,$VENDOR,$BSC,"EVENT_ID","IMSI"])
#elseif (${type}==$TYPE_CELL)
#set($columnsToSelect=[$RAT,$VENDOR,$BSC,$CELL,"EVENT_ID","IMSI"])
#elseif (${type}==$TYPE_SGSN)
#set($columnsToSelect=[$SGSN,"EVENT_ID","IMSI"])
#end

#if(${groupDefinitions})
#set($groupDef = $groupDefinitions.get($groupType))
#set($groupTable = $groupDef.getTableName())
#set($groupnameColumn = $groupDef.getGroupNameColumn())
#set($joinKeys = $groupDef.getGroupKeys())
#set($isgroup=true)
#else
#set($isgroup=false)
#end

#set($columnsToIncludeInDTView=["SUM(DATAVOL_UL)","SUM(DATAVOL_DL)"])
#set($columnsToIncludeInDTPDPView=["count(*)"])
#set($dtViewName="temp_dt")
#set($dtPdpViewName="temp_dtpdp")
#set($sucViewName="suc")
#set($errViewName="err")
#set($dtAggTables= $TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_GSN_DT_TPNAME).getPlainAggregationView())
#set($dtPdpAggTables= $TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_GSN_DTPDP_TPNAME).getPlainAggregationView())
#set($rawDTTables= $TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_GSN_DTPDP_TPNAME).getRawTables())
#set($rawDTPDPTables= $TECH_PACK_LIST.getTechPack($ApplicationConstants.EVENT_E_GSN_DTPDP_TPNAME).getRawTables())
#set($nonDtPdpTables=[$ApplicationConstants.EVENT_E_LTE_TPNAME, $ApplicationConstants.EVENT_E_SGEH_TPNAME])

select	    
    #GET_NOT_NULL_COLUMN(["suc","err", "sub"] [$groupnameColumn])
    isnull(err.EVENT_ID,suc.EVENT_ID) as EVENT_ID,
    isnull(etref.EVENT_ID_DESC,lteEventType.EVENT_ID_DESC) as EVENT_ID_DESC,
    sum(isnull(NO_OF_ERRORS, 0)) as NO_OF_ERRORS,
    sum(isnull(NO_OF_SUCCESSES,0)) as NO_OF_SUCCESSES,
    NO_OF_ERRORS+NO_OF_SUCCESSES as OCCURRENCES,
    #CALCULATE_KPI_RATIO("etref" "err" "suc"),
    sum(isnull(NO_OF_TOTAL_ERR_SUBSCRIBERS,0)) as NO_OF_TOTAL_ERR_SUBSCRIBERS,
	#SELECT_COLUMNS_2G3G_EVENT_ANALYSIS_SUMMARY_VIEW($dtAggTables $dtPdpAggTables $rawDTTables $rawDTPDPTables $dtViewName $dtPdpViewName)
from    
    (	#foreach ($aggTable in $TECH_PACK_LIST.getErrAggregationViewsForTechPacks($nonDtPdpTables))
			#if ( $velocityCount == 1)
				#SELECT_FROM_AGGREGATION_AND_GROUP_TABLES($aggTable)
			#else
				union all
				#SELECT_FROM_AGGREGATION_AND_GROUP_TABLES($aggTable)
			#end
		#end		
    ) as err($groupnameColumn, EVENT_ID, NO_OF_ERRORS, NO_OF_NET_INIT_DEACTIVATES)    
    full outer join
    ( #foreach ($aggTable in $TECH_PACK_LIST.getSucAggregationViewsForTechPacks($nonDtPdpTables))
			#if ( $velocityCount == 1)
				#SELECT_FROM_AGGREGATION_AND_GROUP_TABLES($aggTable)
			#else
				union all
				#SELECT_FROM_AGGREGATION_AND_GROUP_TABLES($aggTable)
			#end
		#end		
    )as suc($groupnameColumn, EVENT_ID, NO_OF_SUCCESSES, NO_OF_NET_INIT_DEACTIVATES)
    on(
        err.$groupnameColumn = suc.$groupnameColumn
        and err.EVENT_ID = suc.EVENT_ID
    )
    full outer join
    (select
        $groupnameColumn,
        EVENT_ID,        
        count(distinct(IMSI))
    from
		#REPLACE_RAW_VIEW_WITH_RAW_TABLES_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS($TECH_PACK_LIST.getAllRawErrTables() "temp_sub" $columnsToSelect)
		,$groupTable temp_group
		where
			temp_group.$groupnameColumn = :$ApplicationConstants.GROUP_NAME_PARAM
			and #GET_JOIN("temp_sub" "temp_group" $joinKeys)	
    group by
        $groupnameColumn,
        EVENT_ID		
    ) as sub($groupnameColumn, EVENT_ID, NO_OF_TOTAL_ERR_SUBSCRIBERS) 
    on(
        #GET_MULTI_JOIN(["suc", "err"] "sub" [$groupnameColumn, "EVENT_ID"])
    )        
    left outer join    
        dc.DIM_E_SGEH_EVENTTYPE etref
    on(
        #GET_MULTI_JOIN(["suc","err","sub"] "etref" ["EVENT_ID"])
    )    
	left outer join    
        dc.DIM_E_LTE_EVENTTYPE lteEventType
    on(
        #GET_MULTI_JOIN(["suc","err","sub"] "lteEventType" ["EVENT_ID"])
    )  
    #JOIN_2G3G_TABLES_EVENT_ANALYSIS_SUMMARY_VIEW($dtAggTables $dtPdpAggTables $rawDTTables $rawDTPDPTables $dtViewName $dtPdpViewName $columns $columnsToIncludeInDTView $columnsToIncludeInDTPDPView)
group by
    $groupnameColumn,
    EVENT_ID,
    EVENT_ID_DESC
having
	EVENT_ID between 0 and 255
    ##EVENT_ID is a tinyint in database
